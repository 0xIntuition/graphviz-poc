[package]
name = "wasm-graph-view"
version = "0.1.0"
authors = ["Simonas Karuzas <simonas@intuition.systems>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.92"
bevy-graph-view = { path = "../../crates/bevy-graph-view" }
bevy_panorbit_camera = { version="0.17" }
rand="*"
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }
serde = { version = "1.0", features = ["derive"] }
serde-wasm-bindgen = "0.6"
serde_json = "1.0"
lazy_static = "1.4.0"
web-sys = { version = "0.3", features = [
  "Document",
  "Window",
  "console"
]}

[dependencies.bevy]
version = "0.13.2"
default-features = false
features = [
  "bevy_asset",         # Assets management
  "bevy_scene",         # Scenes management
  "bevy_winit",         # Window management (cross-platform Winit backend)
  "bevy_render",        # Rendering framework core
  "bevy_core_pipeline", # Common rendering abstractions
  "bevy_pbr",           # 3D (physically-based) rendering
  "animation",          # Animation support
  "tonemapping_luts",   # Support different camera Tonemapping modes (enables KTX2+zstd)
  "webgl2",                # Web: use WebGL2 instead of WebGPU
]

[dev-dependencies]
wasm-bindgen-test = "0.3.34"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
